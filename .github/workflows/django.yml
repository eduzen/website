name: Django CI

on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/github_actions
      DJANGO_CONFIGURATION: Test
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
        poetry-version: [1.1.5]

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code # checking our the code at current commit that triggers the workflow
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.2.2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache dependency # caching dependency will make our build faster.
      uses: actions/cache@v2.1.5 # for more info checkout pip section documentation at https://github.com/actions/cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements_dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Run image
      uses: abatilo/actions-poetry@v2.1.2
      with:
        poetry-version: ${{ matrix.poetry-version }}

    - name: Install dependencies
      run: poetry install

    - name: Check Code Style
      uses: pre-commit/action@v2.0.3

    - name: Run Django Check
      run: poetry run python manage.py check

    - name: Run Tests
      run: echo $DATABASE_URL; poetry run pytest

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Cache Docker layers
      uses: actions/cache@v2.1.5
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Prepare
      id: prep
      run: |
        DOCKER_IMAGE=eduzen/website
        VERSION=latest
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        TAGS="${DOCKER_IMAGE}:${VERSION}"
        if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          TAGS="$TAGS,${DOCKER_IMAGE}:latest"
        fi
        echo ::set-output name=tags::${TAGS}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        tags: ${{ steps.prep.outputs.tags }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        push: ${{ github.event_name != 'pull_request' }}

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
