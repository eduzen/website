name: Docker

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: read

env:
  IMAGE_NAME: website
  DJANGO_SETTINGS_MODULE: website.settings.prod

jobs:
  push:
    runs-on: ubuntu-latest
    outputs:
      digest:    ${{ steps.docker_build.outputs.digest }}
      platforms: ${{ steps.docker_build.outputs.platforms }}
    if: github.event_name == 'push'
    steps:
      - name: Validate env vars
        run: |
          : "${{ secrets.DOCKERHUB_USERNAME }}" || { echo "Missing DOCKERHUB_USERNAME"; exit 1; }
          : "${{ secrets.DOCKERHUB_TOKEN }}"    || { echo "Missing DOCKERHUB_TOKEN"; exit 1; }
          : "${{ secrets.TELEGRAM_TOKEN }}"     || { echo "Missing TELEGRAM_TOKEN"; exit 1; }
          : "${{ secrets.TELEGRAM_TO }}"        || { echo "Missing TELEGRAM_TO"; exit 1; }

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0
        with:
          buildkitd-flags: --allow-insecure-entitlement network.host

      - name: Login to DockerHub
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6.16.0
        with:
          file: ./Dockerfile
          target: production
          tags: |
            eduzen/website:latest
            eduzen/website:${{ github.sha }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            RELEASE=${{ github.sha }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=$(date --utc +'%Y-%m-%dT%H:%M:%SZ')
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

      - name: Print image digest
        run: echo "→ ${{ steps.docker_build.outputs.digest }}"

  release:
    needs: push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    env:
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_TO }}
    steps:
      - name: Get today's date (Europe)
        id: date
        run: echo "date=$(date +'%d.%m.%Y')" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "latest-main"
          name: "Latest build on main"
          target_commitish: ${{ github.sha }} # point tag at this commit
          allow_update: true
          update_tag: true
          make_latest: true
          body: |
            • Date: ${{ steps.date.outputs.date }}
            • Commit: ${{ github.sha }}

      - name: Notify Telegram via curl
        if: always()
        run: |
          status="${{ job.status }}"
          emoji="❌"
          [[ "$status" == "success" ]] && emoji="✅"

          read -r -d '' msg <<-EOF
          ${emoji} *Build ${status^^}*
          • Platforms: ${{ needs.push.outputs.platforms }}
          • Image: \`eduzen/website:${{ github.sha }}\`
          • Digest: \`${{ needs.push.outputs.digest }}\`
          • Date: ${{ steps.date.outputs.date }}
          • Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          EOF

          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" \
                -d chat_id="${TELEGRAM_CHAT_ID}" \
                -d parse_mode=Markdown \
                -d text="$msg"
