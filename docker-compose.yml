version: '3'

volumes:
  pgdata:

services:
  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  static:
    image: nginx:alpine
    expose:
      - "8080"
    environment:
      - VIRTUAL_HOST=static.eduzen.com.ar
    volumes:
      - ./website/static:/usr/share/nginx/html:ro

  media:
    image: nginx:alpine
    expose:
      - "8080"
    environment:
      - VIRTUAL_HOST=media.eduzen.com.ar
    volumes:
      - ./website/media:/usr/share/nginx/html:ro

  django:
    build: .
    command: sh ./scripts/gunicorn_start.sh
    volumes:
      - .:/code
    expose:
      - "8080"
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOSTS}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - LOG_LEVEL=${LOG_LEVEL}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
      - SECRET_KEY=${SECRET_KEY}
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - DB_PASS=${DB_PASS}
      - DB_PORT=${DB_PORT}
      - DB_SERVICE=${DB_SERVICE}
      - DEBUG=${DEBUG}
      - NORECAPTCHA_SECRET_KEY=${NORECAPTCHA_SECRET_KEY}
      - NORECAPTCHA_SITE_KEY=${NORECAPTCHA_SITE_KEY}
      - MAILGUN_API_KEY=${MAILGUN_API_KEY}
      - SENTRY_DSN=${SENTRY_DSN}
    links:
      - postgres
    depends_on:
      - postgres

  postgres:
    image: postgres:alpine
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data/
      - ./scripts/db/:/docker-entrypoint-initdb.d/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
