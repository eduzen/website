volumes:
  pgdata:
  shell_history:
  ipy_history:

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    command: python manage.py runserver 0.0.0.0:80
    tty: true
    develop:
      # Create a `watch` configuration to update the appl
      # https://docs.docker.com/compose/file-watch/#compose-watch-versus-bind-mounts
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: .
          target: /code
          # Exclude the project virtual environment â€” it could be for a
          # different platform in the container
          ignore:
            - .venv/
        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml
    volumes:
      - .:/code
      - shell_history:/root/hist
      - ipy_history:/root/.ipython/
      - ./secrets/eduzen.json:/root/keys/eduzen.json
    ports:
      - "8000:80"
      - "3000:3000"
    depends_on:
      - db
      - redis
    env_file:
      - .env

  db:
    image: postgres:13-alpine3.17
    volumes:
      - pgdata:/var/lib/postgresql/data/
      - ./scripts/db/:/docker-entrypoint-initdb.d/
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD

  redis:
    image: redis:7-alpine
    expose:
      - "6379"

  adminer:
    image: adminer:latest
    profiles: ["debug"]
    restart: always
    ports:
        - 8000:8000
